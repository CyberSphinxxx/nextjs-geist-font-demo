{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/storage.ts"],"sourcesContent":["import { FavoriteVerse, UserSettings } from '@/lib/types';\n\nconst STORAGE_KEYS = {\n  FAVORITES: 'dailybread_favorites',\n  SETTINGS: 'dailybread_settings',\n  LAST_VERSE_DATE: 'dailybread_last_verse_date',\n  DAILY_VERSE: 'dailybread_daily_verse',\n} as const;\n\nexport const storage = {\n  // Favorites\n  getFavorites(): FavoriteVerse[] {\n    if (typeof window === 'undefined') return [];\n    const stored = localStorage.getItem(STORAGE_KEYS.FAVORITES);\n    return stored ? JSON.parse(stored) : [];\n  },\n\n  addFavorite(verse: Omit<FavoriteVerse, 'id' | 'savedAt'>): FavoriteVerse {\n    const favorites = this.getFavorites();\n    const newFavorite: FavoriteVerse = {\n      ...verse,\n      id: Date.now().toString(),\n      savedAt: new Date().toISOString(),\n    };\n    favorites.unshift(newFavorite);\n    localStorage.setItem(STORAGE_KEYS.FAVORITES, JSON.stringify(favorites));\n    return newFavorite;\n  },\n\n  removeFavorite(id: string): void {\n    const favorites = this.getFavorites();\n    const filtered = favorites.filter(f => f.id !== id);\n    localStorage.setItem(STORAGE_KEYS.FAVORITES, JSON.stringify(filtered));\n  },\n\n  updateFavorite(id: string, updates: Partial<FavoriteVerse>): void {\n    const favorites = this.getFavorites();\n    const index = favorites.findIndex(f => f.id === id);\n    if (index !== -1) {\n      favorites[index] = { ...favorites[index], ...updates };\n      localStorage.setItem(STORAGE_KEYS.FAVORITES, JSON.stringify(favorites));\n    }\n  },\n\n  // Settings\n  getSettings(): UserSettings {\n    if (typeof window === 'undefined') {\n      return {\n        defaultTranslation: 'NIV',\n        dailyReminder: true,\n        reminderTime: '08:00',\n        theme: 'system',\n      };\n    }\n    const stored = localStorage.getItem(STORAGE_KEYS.SETTINGS);\n    return stored ? JSON.parse(stored) : {\n      defaultTranslation: 'NIV',\n      dailyReminder: true,\n      reminderTime: '08:00',\n      theme: 'system',\n    };\n  },\n\n  saveSettings(settings: UserSettings): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(STORAGE_KEYS.SETTINGS, JSON.stringify(settings));\n    }\n  },\n\n  // Daily verse tracking\n  getDailyVerseDate(): string | null {\n    if (typeof window === 'undefined') return null;\n    return localStorage.getItem(STORAGE_KEYS.LAST_VERSE_DATE);\n  },\n\n  setDailyVerseDate(date: string): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(STORAGE_KEYS.LAST_VERSE_DATE, date);\n    }\n  },\n\n  getDailyVerse(): any {\n    if (typeof window === 'undefined') return null;\n    const stored = localStorage.getItem(STORAGE_KEYS.DAILY_VERSE);\n    return stored ? JSON.parse(stored) : null;\n  },\n\n  setDailyVerse(verse: any): void {\n    if (typeof window !== 'undefined') {\n      localStorage.setItem(STORAGE_KEYS.DAILY_VERSE, JSON.stringify(verse));\n    }\n  },\n};\n"],"names":[],"mappings":";;;AAEA,MAAM,eAAe;IACnB,WAAW;IACX,UAAU;IACV,iBAAiB;IACjB,aAAa;AACf;AAEO,MAAM,UAAU;IACrB,YAAY;IACZ;QACE,uCAAmC;;QAAS;QAC5C,MAAM,SAAS,aAAa,OAAO,CAAC,aAAa,SAAS;QAC1D,OAAO,SAAS,KAAK,KAAK,CAAC,UAAU,EAAE;IACzC;IAEA,aAAY,KAA4C;QACtD,MAAM,YAAY,IAAI,CAAC,YAAY;QACnC,MAAM,cAA6B;YACjC,GAAG,KAAK;YACR,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,SAAS,IAAI,OAAO,WAAW;QACjC;QACA,UAAU,OAAO,CAAC;QAClB,aAAa,OAAO,CAAC,aAAa,SAAS,EAAE,KAAK,SAAS,CAAC;QAC5D,OAAO;IACT;IAEA,gBAAe,EAAU;QACvB,MAAM,YAAY,IAAI,CAAC,YAAY;QACnC,MAAM,WAAW,UAAU,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAChD,aAAa,OAAO,CAAC,aAAa,SAAS,EAAE,KAAK,SAAS,CAAC;IAC9D;IAEA,gBAAe,EAAU,EAAE,OAA+B;QACxD,MAAM,YAAY,IAAI,CAAC,YAAY;QACnC,MAAM,QAAQ,UAAU,SAAS,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAChD,IAAI,UAAU,CAAC,GAAG;YAChB,SAAS,CAAC,MAAM,GAAG;gBAAE,GAAG,SAAS,CAAC,MAAM;gBAAE,GAAG,OAAO;YAAC;YACrD,aAAa,OAAO,CAAC,aAAa,SAAS,EAAE,KAAK,SAAS,CAAC;QAC9D;IACF;IAEA,WAAW;IACX;QACE,uCAAmC;;QAOnC;QACA,MAAM,SAAS,aAAa,OAAO,CAAC,aAAa,QAAQ;QACzD,OAAO,SAAS,KAAK,KAAK,CAAC,UAAU;YACnC,oBAAoB;YACpB,eAAe;YACf,cAAc;YACd,OAAO;QACT;IACF;IAEA,cAAa,QAAsB;QACjC,wCAAmC;YACjC,aAAa,OAAO,CAAC,aAAa,QAAQ,EAAE,KAAK,SAAS,CAAC;QAC7D;IACF;IAEA,uBAAuB;IACvB;QACE,uCAAmC;;QAAW;QAC9C,OAAO,aAAa,OAAO,CAAC,aAAa,eAAe;IAC1D;IAEA,mBAAkB,IAAY;QAC5B,wCAAmC;YACjC,aAAa,OAAO,CAAC,aAAa,eAAe,EAAE;QACrD;IACF;IAEA;QACE,uCAAmC;;QAAW;QAC9C,MAAM,SAAS,aAAa,OAAO,CAAC,aAAa,WAAW;QAC5D,OAAO,SAAS,KAAK,KAAK,CAAC,UAAU;IACvC;IAEA,eAAc,KAAU;QACtB,wCAAmC;YACjC,aAAa,OAAO,CAAC,aAAa,WAAW,EAAE,KAAK,SAAS,CAAC;QAChE;IACF;AACF","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/theme-provider.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { storage } from '@/lib/storage';\n\ntype Theme = 'dark' | 'light' | 'system';\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: 'system',\n  setTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = 'system',\n  storageKey = 'dailybread-theme',\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    if (typeof window !== 'undefined') {\n      const settings = storage.getSettings();\n      return settings.theme || defaultTheme;\n    }\n    return defaultTheme;\n  });\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n\n    root.classList.remove('light', 'dark');\n\n    if (theme === 'system') {\n      const systemTheme = window.matchMedia('(prefers-color-scheme: dark)')\n        .matches\n        ? 'dark'\n        : 'light';\n\n      root.classList.add(systemTheme);\n      return;\n    }\n\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      const settings = storage.getSettings();\n      storage.saveSettings({ ...settings, theme });\n      setTheme(theme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error('useTheme must be used within a ThemeProvider');\n\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAkBA,MAAM,eAAmC;IACvC,OAAO;IACP,UAAU,IAAM;AAClB;AAEA,MAAM,qCAAuB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAsB;AAExD,SAAS,cAAc,EAC5B,QAAQ,EACR,eAAe,QAAQ,EACvB,aAAa,kBAAkB,EAC/B,GAAG,OACgB;;IACnB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;kCAAS;YACxC,wCAAmC;gBACjC,MAAM,WAAW,wHAAA,CAAA,UAAO,CAAC,WAAW;gBACpC,OAAO,SAAS,KAAK,IAAI;YAC3B;;QAEF;;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,OAAO,OAAO,QAAQ,CAAC,eAAe;YAE5C,KAAK,SAAS,CAAC,MAAM,CAAC,SAAS;YAE/B,IAAI,UAAU,UAAU;gBACtB,MAAM,cAAc,OAAO,UAAU,CAAC,gCACnC,OAAO,GACN,SACA;gBAEJ,KAAK,SAAS,CAAC,GAAG,CAAC;gBACnB;YACF;YAEA,KAAK,SAAS,CAAC,GAAG,CAAC;QACrB;kCAAG;QAAC;KAAM;IAEV,MAAM,QAAQ;QACZ;QACA,UAAU,CAAC;YACT,MAAM,WAAW,wHAAA,CAAA,UAAO,CAAC,WAAW;YACpC,wHAAA,CAAA,UAAO,CAAC,YAAY,CAAC;gBAAE,GAAG,QAAQ;gBAAE;YAAM;YAC1C,SAAS;QACX;IACF;IAEA,qBACE,6LAAC,qBAAqB,QAAQ;QAAE,GAAG,KAAK;QAAE,OAAO;kBAC9C;;;;;;AAGP;GA9CgB;KAAA;AAgDT,MAAM,WAAW;;IACtB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAE3B,IAAI,YAAY,WACd,MAAM,IAAI,MAAM;IAElB,OAAO;AACT;IAPa","debugId":null}}]
}